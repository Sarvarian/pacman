[gd_scene load_steps=18 format=2]

[ext_resource path="res://scene/ground.obj" type="ArrayMesh" id=1]
[ext_resource path="res://scene/level.obj" type="ArrayMesh" id=2]
[ext_resource path="res://scene/border.obj" type="ArrayMesh" id=3]
[ext_resource path="res://scene/plane.obj" type="ArrayMesh" id=4]
[ext_resource path="res://scene/border_and_outside.obj" type="ArrayMesh" id=5]
[ext_resource path="res://assets/wall.tres" type="Material" id=6]
[ext_resource path="res://assets/ground.tres" type="Material" id=7]
[ext_resource path="res://assets/day_env.tres" type="Environment" id=9]
[ext_resource path="res://assets/pacman_body.tres" type="Material" id=10]
[ext_resource path="res://assets/pacman_eye.tres" type="Material" id=11]
[ext_resource path="res://models/pacman.obj" type="ArrayMesh" id=12]

[sub_resource type="GDScript" id=7]
script/source = "extends Node


onready var pacman_pos : Vector2 = Vector2($PacmanVisual.transform.origin.x, $PacmanVisual.transform.origin.z)


func _process(_delta : float) -> void:
	$PacmanVisual.transform.origin.x = pacman_pos.x
	$PacmanVisual.transform.origin.z = pacman_pos.y


func _physics_process(_delta : float) -> void:
	pacman_forward()
	$PacmanPhysics.transform.origin.x = pacman_pos.x
	$PacmanPhysics.transform.origin.z = pacman_pos.y


func pacman_forward() -> void:
	if $PacmanTween.is_active(): return
	var raycast : RayCast = $PacmanPhysics/RayCast
	raycast.force_raycast_update()
	if raycast.get_collider(): return
	var visual : MeshInstance = $PacmanVisual
	var origin : Vector3 = visual.transform.origin
	var dir : Vector2 = Vector2(-3, 0).rotated(visual.rotation.y)
	var next_pos : Vector2 = Vector2(origin.x, origin.z) + dir
	$PacmanTween.interpolate_property(
		self, \"pacman_pos\", null, next_pos, 1.0, Tween.TRANS_LINEAR, Tween.EASE_IN)
	$PacmanTween.start()
"

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial


func _ready() -> void:
	show()


func show() -> void:
	$level.visible = true
	$border.visible = true
	$ground.visible = true
	$plane.visible = false
	$border_and_outside.visible = false


func play() -> void:
	$level.visible = true
	$border.visible = false
	$ground.visible = false
	$plane.visible = true
	$border_and_outside.visible = true








"

[sub_resource type="ConcavePolygonShape" id=2]
data = PoolVector3Array( -6, 2, -5, -6, 2, 1, -6, 2, -6, -6, 2, -6, -6, 2, 1, -7, 2, -6, -7, 2, -6, -6, 2, 1, -7, 2, 2, -7, 2, 2, -6, 2, 1, -6, 2, 2, 7, 2, -6, 7, 2, 2, 6, 2, -6, 6, 2, -6, 7, 2, 2, 6, 2, -5, 6, 2, -5, 7, 2, 2, 6, 2, 1, 6, 2, 1, 7, 2, 2, 6, 2, 2, -6, 2, 1, 6, 2, 1, -6, 2, 2, -6, 2, 2, 6, 2, 1, 6, 2, 2, -6, 2, 1, -6, 0, 1, 6, 2, 1, 6, 2, 1, -6, 0, 1, 6, 0, 1, 7, 0, -6, 7, 0, 2, 7, 2, -6, 7, 2, -6, 7, 0, 2, 7, 2, 2, 6, 2, -5, 6, 0, -5, 3, 2, -5, 3, 2, -5, 6, 0, -5, 3, 0, -5, 3, 0, -6, 7, 0, -6, 3, 2, -6, 3, 2, -6, 7, 0, -6, 6, 2, -6, 6, 2, -6, 7, 0, -6, 7, 2, -6, -6, 0, -5, -6, 2, -5, -3, 0, -5, -3, 0, -5, -6, 2, -5, -3, 2, -5, -7, 2, -6, -7, 2, 2, -7, 0, -6, -7, 0, -6, -7, 2, 2, -7, 0, 2, 6, 2, 1, 6, 0, 1, 6, 2, -5, 6, 2, -5, 6, 0, 1, 6, 0, -5, -6, 0, 1, -6, 2, 1, -6, 0, -5, -6, 0, -5, -6, 2, 1, -6, 2, -5, -3, 0, -5, -3, 2, -5, -3, 0, -6, -3, 0, -6, -3, 2, -5, -3, 2, -6, -6, 2, -5, -6, 2, -6, -3, 2, -5, -3, 2, -5, -6, 2, -6, -3, 2, -6, 3, 2, -5, 3, 0, -5, 3, 2, -6, 3, 2, -6, 3, 0, -5, 3, 0, -6, 6, 2, -6, 6, 2, -5, 3, 2, -6, 3, 2, -6, 6, 2, -5, 3, 2, -5, -7, 2, -18, 7, 2, -18, -7, 2, -16, -7, 2, -16, 7, 2, -18, -1, 2, -16, -1, 2, -16, 7, 2, -18, 1, 2, -16, 1, 2, -16, 7, 2, -18, 7, 2, -16, 7, 0, -18, 7, 2, -18, -7, 0, -18, -7, 0, -18, 7, 2, -18, -7, 2, -18, 1, 2, -16, 1, 0, -16, 1, 2, -10, 1, 2, -10, 1, 0, -16, 1, 0, -10, 1, 2, -10, 1, 0, -10, -1, 2, -10, -1, 2, -10, 1, 0, -10, -1, 0, -10, -1, 2, -16, 1, 2, -16, -1, 2, -10, -1, 2, -10, 1, 2, -16, 1, 2, -10, -1, 2, -10, -1, 0, -10, -1, 2, -16, -1, 2, -16, -1, 0, -10, -1, 0, -16, 7, 2, -18, 7, 0, -18, 7, 2, -16, 7, 2, -16, 7, 0, -18, 7, 0, -16, 1, 0, -16, 1, 2, -16, 7, 0, -16, 7, 0, -16, 1, 2, -16, 7, 2, -16, -7, 2, -16, -7, 0, -16, -7, 2, -18, -7, 2, -18, -7, 0, -16, -7, 0, -18, -1, 2, -16, -1, 0, -16, -7, 2, -16, -7, 2, -16, -1, 0, -16, -7, 0, -16, -13, 2, -4, -13, 2, -18, -11, 2, -4, -11, 2, -4, -13, 2, -18, -11, 2, -10, -11, 2, -10, -13, 2, -18, -11, 2, -12, -11, 2, -12, -13, 2, -18, -11, 2, -18, -13, 0, -4, -13, 0, -18, -13, 2, -4, -13, 2, -4, -13, 0, -18, -13, 2, -18, -11, 2, -12, -11, 0, -12, -5, 2, -12, -5, 2, -12, -11, 0, -12, -5, 0, -12, -5, 2, -12, -5, 0, -12, -5, 2, -10, -5, 2, -10, -5, 0, -12, -5, 0, -10, -11, 2, -10, -11, 2, -12, -5, 2, -10, -5, 2, -10, -11, 2, -12, -5, 2, -12, -5, 2, -10, -5, 0, -10, -11, 2, -10, -11, 2, -10, -5, 0, -10, -11, 0, -10, -13, 2, -18, -13, 0, -18, -11, 2, -18, -11, 2, -18, -13, 0, -18, -11, 0, -18, -11, 0, -12, -11, 2, -12, -11, 0, -18, -11, 0, -18, -11, 2, -12, -11, 2, -18, -3, 2, -6, -6, 2, -6, -3, 0, -6, -3, 0, -6, -6, 2, -6, -7, 0, -6, -7, 0, -6, -6, 2, -6, -7, 2, -6, -11, 2, -4, -11, 0, -4, -13, 2, -4, -13, 2, -4, -11, 0, -4, -13, 0, -4, -11, 2, -10, -11, 0, -10, -11, 2, -4, -11, 2, -4, -11, 0, -10, -11, 0, -4, 13, 0, -18, 13, 0, -4, 13, 2, -18, 13, 2, -18, 13, 0, -4, 13, 2, -4, 11, 2, -10, 11, 0, -10, 5, 2, -10, 5, 2, -10, 11, 0, -10, 5, 0, -10, 5, 2, -10, 5, 0, -10, 5, 2, -12, 5, 2, -12, 5, 0, -10, 5, 0, -12, 11, 2, -12, 11, 2, -10, 5, 2, -12, 5, 2, -12, 11, 2, -10, 5, 2, -10, 11, 2, -4, 11, 2, -10, 13, 2, -4, 13, 2, -4, 11, 2, -10, 13, 2, -18, 13, 2, -18, 11, 2, -10, 11, 2, -18, 11, 2, -18, 11, 2, -10, 11, 2, -12, 5, 2, -12, 5, 0, -12, 11, 2, -12, 11, 2, -12, 5, 0, -12, 11, 0, -12, 13, 2, -4, 13, 0, -4, 11, 2, -4, 11, 2, -4, 13, 0, -4, 11, 0, -4, 11, 0, -10, 11, 2, -10, 11, 0, -4, 11, 0, -4, 11, 2, -10, 11, 2, -4, 11, 2, -18, 11, 0, -18, 13, 2, -18, 13, 2, -18, 11, 0, -18, 13, 0, -18, 11, 2, -12, 11, 0, -12, 11, 2, -18, 11, 2, -18, 11, 0, -12, 11, 0, -18, -7, 0, 6, 7, 0, 6, -7, 2, 6, -7, 2, 6, 7, 0, 6, 7, 2, 6, 1, 2, 8, 1, 0, 8, 1, 2, 14, 1, 2, 14, 1, 0, 8, 1, 0, 14, 1, 2, 14, 1, 0, 14, -1, 2, 14, -1, 2, 14, 1, 0, 14, -1, 0, 14, -1, 2, 8, 1, 2, 8, -1, 2, 14, -1, 2, 14, 1, 2, 8, 1, 2, 14, 7, 2, 8, 1, 2, 8, 7, 2, 6, 7, 2, 6, 1, 2, 8, -7, 2, 6, -7, 2, 6, 1, 2, 8, -7, 2, 8, -7, 2, 8, 1, 2, 8, -1, 2, 8, -1, 2, 14, -1, 0, 14, -1, 2, 8, -1, 2, 8, -1, 0, 14, -1, 0, 8, 7, 2, 6, 7, 0, 6, 7, 2, 8, 7, 2, 8, 7, 0, 6, 7, 0, 8, 1, 0, 8, 1, 2, 8, 7, 0, 8, 7, 0, 8, 1, 2, 8, 7, 2, 8, 17, 0, 20, 17, 0, 12, 17, 2, 20, 17, 2, 20, 17, 0, 12, 17, 2, 14, 17, 2, 14, 17, 0, 12, 17, 2, 12, -7, 2, 8, -7, 0, 8, -7, 2, 6, -7, 2, 6, -7, 0, 8, -7, 0, 6, -1, 2, 8, -1, 0, 8, -7, 2, 8, -7, 2, 8, -1, 0, 8, -7, 0, 8, -7, 2, 18, 7, 2, 18, -7, 2, 20, -7, 2, 20, 7, 2, 18, -1, 2, 20, -1, 2, 20, 7, 2, 18, 1, 2, 20, 1, 2, 20, 7, 2, 18, 7, 2, 20, -7, 0, 18, 7, 0, 18, -7, 2, 18, -7, 2, 18, 7, 0, 18, 7, 2, 18, 1, 2, 20, 1, 0, 20, 1, 2, 26, 1, 2, 26, 1, 0, 20, 1, 0, 26, 1, 2, 26, 1, 0, 26, -1, 2, 26, -1, 2, 26, 1, 0, 26, -1, 0, 26, -1, 2, 20, 1, 2, 20, -1, 2, 26, -1, 2, 26, 1, 2, 20, 1, 2, 26, -1, 2, 26, -1, 0, 26, -1, 2, 20, -1, 2, 20, -1, 0, 26, -1, 0, 20, 7, 2, 18, 7, 0, 18, 7, 2, 20, 7, 2, 20, 7, 0, 18, 7, 0, 20, 1, 0, 20, 1, 2, 20, 7, 0, 20, 7, 0, 20, 1, 2, 20, 7, 2, 20, -7, 2, 20, -7, 0, 20, -7, 2, 18, -7, 2, 18, -7, 0, 20, -7, 0, 18, -1, 2, 20, -1, 0, 20, -7, 2, 20, -7, 2, 20, -1, 0, 20, -7, 0, 20, -23, 2, 26, -5, 2, 26, -23, 0, 26, -23, 0, 26, -5, 2, 26, -5, 0, 26, -13, 2, 24, -13, 0, 24, -13, 2, 18, -13, 2, 18, -13, 0, 24, -13, 0, 18, -13, 2, 18, -13, 0, 18, -11, 2, 18, -11, 2, 18, -13, 0, 18, -11, 0, 18, -11, 2, 24, -13, 2, 24, -11, 2, 18, -11, 2, 18, -13, 2, 24, -13, 2, 18, -23, 2, 24, -13, 2, 24, -23, 2, 26, -23, 2, 26, -13, 2, 24, -5, 2, 26, -5, 2, 26, -13, 2, 24, -5, 2, 24, -5, 2, 24, -13, 2, 24, -11, 2, 24, -11, 2, 18, -11, 0, 18, -11, 2, 24, -11, 2, 24, -11, 0, 18, -11, 0, 24, -23, 2, 26, -23, 0, 26, -23, 2, 24, -23, 2, 24, -23, 0, 26, -23, 0, 24, -13, 0, 24, -13, 2, 24, -23, 0, 24, -23, 0, 24, -13, 2, 24, -23, 2, 24, -5, 2, 24, -5, 0, 24, -5, 2, 26, -5, 2, 26, -5, 0, 24, -5, 0, 26, -11, 2, 24, -11, 0, 24, -5, 2, 24, -5, 2, 24, -11, 0, 24, -5, 0, 24, 23, 0, 26, 5, 0, 26, 23, 2, 26, 23, 2, 26, 5, 0, 26, 5, 2, 26, 11, 2, 24, 11, 0, 24, 11, 2, 18, 11, 2, 18, 11, 0, 24, 11, 0, 18, 11, 2, 18, 11, 0, 18, 13, 2, 18, 13, 2, 18, 11, 0, 18, 13, 0, 18, 13, 2, 24, 11, 2, 24, 13, 2, 18, 13, 2, 18, 11, 2, 24, 11, 2, 18, 5, 2, 24, 11, 2, 24, 5, 2, 26, 5, 2, 26, 11, 2, 24, 23, 2, 26, 23, 2, 26, 11, 2, 24, 23, 2, 24, 23, 2, 24, 11, 2, 24, 13, 2, 24, 13, 2, 18, 13, 0, 18, 13, 2, 24, 13, 2, 24, 13, 0, 18, 13, 0, 24, 5, 2, 26, 5, 0, 26, 5, 2, 24, 5, 2, 24, 5, 0, 26, 5, 0, 24, 11, 0, 24, 11, 2, 24, 5, 0, 24, 5, 0, 24, 11, 2, 24, 5, 2, 24, 23, 2, 14, 19, 2, 14, 23, 2, 12, 23, 2, 12, 19, 2, 14, 17, 2, 12, 17, 2, 12, 19, 2, 14, 17, 2, 14, 23, 2, 24, 23, 0, 24, 23, 2, 26, 23, 2, 26, 23, 0, 24, 23, 0, 26, 13, 2, 24, 13, 0, 24, 23, 2, 24, 23, 2, 24, 13, 0, 24, 23, 0, 24, -17, 2, 20, -17, 0, 20, -19, 2, 20, -19, 2, 20, -17, 0, 20, -19, 0, 20, -19, 2, 14, -17, 2, 14, -19, 2, 20, -19, 2, 20, -17, 2, 14, -17, 2, 20, -19, 2, 20, -19, 0, 20, -19, 2, 14, -19, 2, 14, -19, 0, 20, -19, 0, 14, -23, 2, 14, -23, 0, 14, -23, 2, 12, -23, 2, 12, -23, 0, 14, -23, 0, 12, -19, 2, 14, -19, 0, 14, -23, 2, 14, -23, 2, 14, -19, 0, 14, -23, 0, 14, -13, 2, 14, -13, 0, 14, -13, 2, 12, -13, 2, 12, -13, 0, 14, -13, 0, 12, -13, 2, 12, -13, 0, 12, -5, 2, 12, -5, 2, 12, -13, 0, 12, -5, 0, 12, -5, 2, 12, -5, 0, 12, -5, 2, 14, -5, 2, 14, -5, 0, 12, -5, 0, 14, -5, 2, 14, -5, 0, 14, -13, 2, 14, -13, 2, 14, -5, 0, 14, -13, 0, 14, -13, 2, 12, -5, 2, 12, -13, 2, 14, -13, 2, 14, -5, 2, 12, -5, 2, 14, 5, 2, 14, 5, 0, 14, 5, 2, 12, 5, 2, 12, 5, 0, 14, 5, 0, 12, 5, 2, 12, 5, 0, 12, 13, 2, 12, 13, 2, 12, 5, 0, 12, 13, 0, 12, 13, 2, 12, 13, 0, 12, 13, 2, 14, 13, 2, 14, 13, 0, 12, 13, 0, 14, 13, 2, 14, 13, 0, 14, 5, 2, 14, 5, 2, 14, 13, 0, 14, 5, 0, 14, 5, 2, 12, 13, 2, 12, 5, 2, 14, 5, 2, 14, 13, 2, 12, 13, 2, 14, -11, 2, 8, -11, 0, 8, -13, 2, 8, -13, 2, 8, -11, 0, 8, -13, 0, 8, -13, 2, 8, -13, 0, 8, -13, 2, 0, -13, 2, 0, -13, 0, 8, -13, 0, 0, -13, 2, 0, -13, 0, 0, -11, 2, 0, -11, 2, 0, -13, 0, 0, -11, 0, 0, -11, 2, 0, -11, 0, 0, -11, 2, 8, -11, 2, 8, -11, 0, 0, -11, 0, 8, -13, 2, 8, -13, 2, 0, -11, 2, 8, -11, 2, 8, -13, 2, 0, -11, 2, 0, 13, 2, 8, 13, 0, 8, 11, 2, 8, 11, 2, 8, 13, 0, 8, 11, 0, 8, 11, 2, 8, 11, 0, 8, 11, 2, 0, 11, 2, 0, 11, 0, 8, 11, 0, 0, 11, 2, 0, 11, 0, 0, 13, 2, 0, 13, 2, 0, 11, 0, 0, 13, 0, 0, 13, 2, 0, 13, 0, 0, 13, 2, 8, 13, 2, 8, 13, 0, 0, 13, 0, 8, 11, 2, 8, 11, 2, 0, 13, 2, 8, 13, 2, 8, 11, 2, 0, 13, 2, 0, 19, 0, 20, 17, 0, 20, 19, 2, 20, 19, 2, 20, 17, 0, 20, 17, 2, 20, 17, 2, 20, 17, 2, 14, 19, 2, 20, 19, 2, 20, 17, 2, 14, 19, 2, 14, 23, 2, 12, 17, 2, 12, 23, 0, 12, 23, 0, 12, 17, 2, 12, 17, 0, 12, 19, 0, 14, 19, 0, 20, 19, 2, 14, 19, 2, 14, 19, 0, 20, 19, 2, 20, 23, 0, 12, 23, 0, 14, 23, 2, 12, 23, 2, 12, 23, 0, 14, 23, 2, 14, 23, 0, 14, 19, 0, 14, 23, 2, 14, 23, 2, 14, 19, 0, 14, 19, 2, 14, 17, 2, -16, 17, 0, -16, 17, 2, -18, 17, 2, -18, 17, 0, -16, 17, 0, -18, 17, 2, -18, 17, 0, -18, 23, 2, -18, 23, 2, -18, 17, 0, -18, 23, 0, -18, 23, 2, -18, 23, 0, -18, 23, 2, -16, 23, 2, -16, 23, 0, -18, 23, 0, -16, 23, 2, -16, 23, 0, -16, 17, 2, -16, 17, 2, -16, 23, 0, -16, 17, 0, -16, 17, 2, -18, 23, 2, -18, 17, 2, -16, 17, 2, -16, 23, 2, -18, 23, 2, -16, -17, 0, -18, -17, 0, -16, -17, 2, -18, -17, 2, -18, -17, 0, -16, -17, 2, -16, -23, 0, -18, -17, 0, -18, -23, 2, -18, -23, 2, -18, -17, 0, -18, -17, 2, -18, -23, 0, -16, -23, 0, -18, -23, 2, -16, -23, 2, -16, -23, 0, -18, -23, 2, -18, -17, 0, -16, -23, 0, -16, -17, 2, -16, -17, 2, -16, -23, 0, -16, -23, 2, -16, -23, 2, -16, -23, 2, -18, -17, 2, -16, -17, 2, -16, -23, 2, -18, -17, 2, -18, 17, 2, -22, 17, 0, -22, 17, 2, -26, 17, 2, -26, 17, 0, -22, 17, 0, -26, 17, 2, -26, 17, 0, -26, 23, 2, -26, 23, 2, -26, 17, 0, -26, 23, 0, -26, 23, 2, -26, 23, 0, -26, 23, 2, -22, 23, 2, -22, 23, 0, -26, 23, 0, -22, 23, 2, -22, 23, 0, -22, 17, 2, -22, 17, 2, -22, 23, 0, -22, 17, 0, -22, 17, 2, -26, 23, 2, -26, 17, 2, -22, 17, 2, -22, 23, 2, -26, 23, 2, -22, 5, 2, -22, 5, 0, -22, 5, 2, -26, 5, 2, -26, 5, 0, -22, 5, 0, -26, 5, 2, -26, 5, 0, -26, 13, 2, -26, 13, 2, -26, 5, 0, -26, 13, 0, -26, 13, 2, -26, 13, 0, -26, 13, 2, -22, 13, 2, -22, 13, 0, -26, 13, 0, -22, 13, 2, -22, 13, 0, -22, 5, 2, -22, 5, 2, -22, 13, 0, -22, 5, 0, -22, 5, 2, -26, 13, 2, -26, 5, 2, -22, 5, 2, -22, 13, 2, -26, 13, 2, -22, -17, 0, -26, -17, 0, -22, -17, 2, -26, -17, 2, -26, -17, 0, -22, -17, 2, -22, -23, 0, -26, -17, 0, -26, -23, 2, -26, -23, 2, -26, -17, 0, -26, -17, 2, -26, -23, 0, -22, -23, 0, -26, -23, 2, -22, -23, 2, -22, -23, 0, -26, -23, 2, -26, -17, 0, -22, -23, 0, -22, -17, 2, -22, -17, 2, -22, -23, 0, -22, -23, 2, -22, -23, 2, -22, -23, 2, -26, -17, 2, -22, -17, 2, -22, -23, 2, -26, -17, 2, -26, -5, 0, -26, -5, 0, -22, -5, 2, -26, -5, 2, -26, -5, 0, -22, -5, 2, -22, -13, 0, -26, -5, 0, -26, -13, 2, -26, -13, 2, -26, -5, 0, -26, -5, 2, -26, -13, 0, -22, -13, 0, -26, -13, 2, -22, -13, 2, -22, -13, 0, -26, -13, 2, -26, -5, 0, -22, -13, 0, -22, -5, 2, -22, -5, 2, -22, -13, 0, -22, -13, 2, -22, -13, 2, -22, -13, 2, -26, -5, 2, -22, -5, 2, -22, -13, 2, -26, -5, 2, -26, 7, 2, 2, 7, 0, 2, 6, 2, 2, 6, 2, 2, 7, 0, 2, -6, 2, 2, -6, 2, 2, 7, 0, 2, -7, 2, 2, -7, 2, 2, 7, 0, 2, -7, 0, 2, -17, 2, 12, -17, 0, 12, -17, 2, 14, -17, 2, 14, -17, 0, 12, -17, 2, 20, -17, 2, 20, -17, 0, 12, -17, 0, 20, -23, 0, 12, -17, 0, 12, -23, 2, 12, -23, 2, 12, -17, 0, 12, -17, 2, 12, -23, 2, 12, -17, 2, 12, -23, 2, 14, -23, 2, 14, -17, 2, 12, -17, 2, 14 )

[sub_resource type="ConcavePolygonShape" id=5]
data = PoolVector3Array( -17, 0, -12, -17, 0, -4, -17, 2, -12, -17, 2, -12, -17, 0, -4, -17, 2, -4, -27, 0, -12, -17, 0, -12, -27, 2, -12, -27, 2, -12, -17, 0, -12, -17, 2, -12, -17, 2, 0, -17, 0, 0, -17, 2, 8, -17, 2, 8, -17, 0, 0, -17, 0, 8, -17, 2, 8, -17, 0, 8, -27, 2, 8, -27, 2, 8, -17, 0, 8, -27, 0, 8, -29, 0, 0, -17, 0, 0, -29, 2, 0, -29, 2, 0, -17, 0, 0, -17, 2, 0, -27, 2, 29, -29, 2, 29, -27, 2, 8, -27, 2, 8, -29, 2, 29, -29, 2, 8, -29, 2, 31, -29, 0, 31, -29, 2, 29, -29, 2, 29, -29, 0, 31, -29, 0, 29, -29, 2, -31, -29, 0, -31, 29, 2, -31, 29, 2, -31, -29, 0, -31, 29, 0, -31, -29, 2, -31, 29, 2, -31, -29, 2, -29, -29, 2, -29, 29, 2, -31, 29, 2, -29, 17, 2, -4, 17, 0, -4, 17, 2, -12, 17, 2, -12, 17, 0, -4, 17, 0, -12, 17, 2, -12, 17, 0, -12, 27, 2, -12, 27, 2, -12, 17, 0, -12, 27, 0, -12, 27, 2, -29, 29, 2, -29, 27, 2, -12, 27, 2, -12, 29, 2, -29, 29, 2, -12, 29, 2, -12, 29, 2, -29, 29, 2, -31, 17, 0, 8, 17, 0, 0, 17, 2, 8, 17, 2, 8, 17, 0, 0, 17, 2, 0, 27, 0, 8, 17, 0, 8, 27, 2, 8, 27, 2, 8, 17, 0, 8, 17, 2, 8, 27, 0, 8, 27, 2, 8, 27, 0, 29, 27, 0, 29, 27, 2, 8, 27, 2, 29, -29, 2, 29, -29, 0, 29, -29, 2, 0, -29, 2, 0, -29, 0, 29, -29, 0, 0, -17, 2, 0, -17, 2, 8, -29, 2, 0, -29, 2, 0, -17, 2, 8, -29, 2, 8, -27, 2, 8, -27, 0, 8, -27, 2, 29, -27, 2, 29, -27, 0, 8, -27, 0, 29, -27, 2, 18, -27, 0, 18, -23, 2, 18, -23, 2, 18, -27, 0, 18, -23, 0, 18, -23, 2, 18, -23, 0, 18, -23, 2, 20, -23, 2, 20, -23, 0, 18, -23, 0, 20, -23, 2, 20, -23, 0, 20, -27, 2, 20, -27, 2, 20, -23, 0, 20, -27, 0, 20, -27, 2, 18, -23, 2, 18, -27, 2, 20, -27, 2, 20, -23, 2, 18, -23, 2, 20, 23, 2, 20, 23, 0, 20, 23, 2, 18, 23, 2, 18, 23, 0, 20, 23, 0, 18, 23, 2, 18, 23, 0, 18, 27, 2, 18, 27, 2, 18, 23, 0, 18, 27, 0, 18, 27, 2, 20, 27, 0, 20, 23, 2, 20, 23, 2, 20, 27, 0, 20, 23, 0, 20, 23, 2, 18, 27, 2, 18, 23, 2, 20, 23, 2, 20, 27, 2, 18, 27, 2, 20, -27, 0, 29, 27, 0, 29, -27, 2, 29, -27, 2, 29, 27, 0, 29, 27, 2, 29, -29, 2, 31, 29, 2, 31, -29, 0, 31, -29, 0, 31, 29, 2, 31, 29, 0, 31, 27, 2, -12, 27, 0, -12, 27, 2, -29, 27, 2, -29, 27, 0, -12, 27, 0, -29, 27, 2, -29, 27, 0, -29, -27, 2, -29, -27, 2, -29, 27, 0, -29, -27, 0, -29, 17, 2, 8, 17, 2, 0, 29, 2, 8, 29, 2, 8, 17, 2, 0, 29, 2, 0, 29, 2, -4, 17, 2, -4, 29, 2, -12, 29, 2, -12, 17, 2, -4, 17, 2, -12, 29, 2, -31, 29, 0, -31, 29, 2, -4, 29, 2, -4, 29, 0, -31, 29, 0, -4, 29, 2, 0, 17, 2, 0, 29, 0, 0, 29, 0, 0, 17, 2, 0, 17, 0, 0, 17, 0, -4, 17, 2, -4, 29, 0, -4, 29, 0, -4, 17, 2, -4, 29, 2, -4, -27, 0, -29, -27, 0, -12, -27, 2, -29, -27, 2, -29, -27, 0, -12, -27, 2, -12, -27, 2, -29, -27, 2, -12, -29, 2, -29, -29, 2, -29, -27, 2, -12, -29, 2, -12, -29, 0, -4, -29, 0, -31, -29, 2, -4, -29, 2, -4, -29, 0, -31, -29, 2, -31, -29, 2, -4, -17, 2, -4, -29, 0, -4, -29, 0, -4, -17, 2, -4, -17, 0, -4, -17, 2, -12, -17, 2, -4, -29, 2, -12, -29, 2, -12, -17, 2, -4, -29, 2, -4, 29, 2, 31, -29, 2, 31, 29, 2, 29, 29, 2, 29, -29, 2, 31, -29, 2, 29, 29, 2, 8, 29, 2, 29, 27, 2, 8, 27, 2, 8, 29, 2, 29, 27, 2, 29, 29, 2, 31, 29, 2, 0, 29, 0, 31, 29, 0, 31, 29, 2, 0, 29, 0, 0, -1, 2, -22, -1, 0, -22, -1, 2, -29, -1, 2, -29, -1, 0, -22, -1, 0, -29, 1, 2, -29, 1, 0, -29, 1, 2, -22, 1, 2, -22, 1, 0, -29, 1, 0, -22, 1, 2, -22, 1, 0, -22, -1, 2, -22, -1, 2, -22, 1, 0, -22, -1, 0, -22, -1, 2, -29, 1, 2, -29, -1, 2, -22, -1, 2, -22, 1, 2, -29, 1, 2, -22 )

[sub_resource type="GDScript" id=8]
script/source = "extends WorldEnvironment


var day_env : Environment = preload(\"res://assets/day_env.tres\")
var night_env : Environment = preload(\"res://assets/night_env.tres\")


func _ready():
	day()

func day() -> void:
	environment = day_env


func night() -> void:
	environment = night_env
"

[sub_resource type="SphereShape" id=6]
radius = 1.25

[node name="Main" type="Node"]
script = SubResource( 7 )

[node name="Scene" type="Spatial" parent="."]
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="ground" type="MeshInstance" parent="Scene"]
mesh = ExtResource( 1 )
skeleton = NodePath("../..")
material/0 = ExtResource( 7 )
__meta__ = {
"_edit_lock_": true
}

[node name="plane" type="MeshInstance" parent="Scene"]
visible = false
mesh = ExtResource( 4 )
skeleton = NodePath("../..")
material/0 = ExtResource( 7 )
__meta__ = {
"_edit_lock_": true
}

[node name="level" type="MeshInstance" parent="Scene"]
mesh = ExtResource( 2 )
skeleton = NodePath("../..")
material/0 = ExtResource( 6 )
__meta__ = {
"_edit_lock_": true
}

[node name="border" type="MeshInstance" parent="Scene"]
mesh = ExtResource( 3 )
material/0 = ExtResource( 6 )
__meta__ = {
"_edit_lock_": true
}

[node name="border_and_outside" type="MeshInstance" parent="Scene"]
visible = false
mesh = ExtResource( 5 )
skeleton = NodePath("../..")
material/0 = ExtResource( 6 )
__meta__ = {
"_edit_lock_": true
}

[node name="SceneCollisions" type="StaticBody" parent="."]
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="level" type="CollisionShape" parent="SceneCollisions"]
shape = SubResource( 2 )
__meta__ = {
"_edit_lock_": true
}

[node name="border" type="CollisionShape" parent="SceneCollisions"]
shape = SubResource( 5 )
__meta__ = {
"_edit_lock_": true
}

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 9 )
script = SubResource( 8 )

[node name="PacmanTween" type="Tween" parent="."]

[node name="PacmanVisual" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 16 )
mesh = ExtResource( 12 )
skeleton = NodePath("")
material/0 = ExtResource( 10 )
material/1 = ExtResource( 11 )
__meta__ = {
"_edit_lock_": true
}

[node name="PacmanPhysics" type="Area" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 16 )
monitorable = false
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="RayCast" type="RayCast" parent="PacmanPhysics"]
cast_to = Vector3( -3, 0, 0 )
debug_shape_thickness = 5.0
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionShape" type="CollisionShape" parent="PacmanPhysics"]
shape = SubResource( 6 )
__meta__ = {
"_edit_lock_": true
}

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.878025, 0, 0.478615, -0.0669247, 0.990176, 0.122774, -0.473913, -0.13983, 0.869399, 0, 4.83571, 20.0912 )
current = true
